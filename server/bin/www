#!/usr/bin/env node

var PORT = 50000;

//var cluster = require('cluster');
//var numCPUs = require('os').cpus().length;
var debug = require('debug')('app');
var app = require('../app');
var dgram = require("dgram");
var udpSocket = dgram.createSocket("udp4");
var redis = require("redis");
var redisClient = redis.createClient();

//app.set('port', process.env.PORT || PORT);
app.set('port', 88);

var webServer = app.listen(app.get('port'), function () {
	debug('Express server listening on port ' + webServer.address().port);
});

///// SOCKET /////

var io = require('socket.io')(webServer);
io.on('connection', function (socket) {
	redisClient.smembers('devices', function (err, result) {
		socket.emit('devices', result);
		result.forEach(function (device) {
			setInterval(function () {
				redisClient.lindex(device + ':data', 0, function (err, reply) {
					socket.emit('data', reply);
				});
			}, 100);
		});
	});
});

///// UDP /////

udpSocket.on("message", function (msg, rinfo) {
	if (result = String(msg).match(/\+PING:([a-z]{4}_[0-9]{6})/i)) {
		redisClient.sadd('devices', result[1]);
		redisClient.hmset(result[1],
			'ip', rinfo.address,
			'port', rinfo.port,
			'active', true,
			'latency', 0
			//'last_ping', 0
		);
	}
	if (result = String(msg).match(/\+([a-z]{4}_[0-9]{6}):(.*)/i)) {
		redisClient.lpush(result[1] + ':data', msg);
		redisClient.ltrim(result[1] + ':data', 0, 999);
	}
});
setInterval(function() {
	redisClient.smembers('devices', function (err, result) {
		result.forEach(function (device) {
			redisClient.hmget(device, 'ip', 'port', function (err, reply) {
				var epoch = new Date().getTime();
				console.log('PING to IP ' + reply[0] + ' (' + epoch + ')');
				var message = new Buffer('+PING:' + epoch + '\r\n'); //TODO číslo požadavku
				redisClient.hmset(device, 'last_ping', epoch); //FIXME
				udpSocket.send(message, 0, message.length, reply[1], reply[0]);
			});
		});
	});
}, 1000);
udpSocket.bind(PORT);
