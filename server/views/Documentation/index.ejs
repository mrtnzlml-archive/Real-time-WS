<h1>Documentation</h1>
<p>
    This document contains all necessary information about project internal and database structure.
</p>

<h2>Database structure</h2>
<p>There are four types of tables in the Redis at this moment:</p>
<ul>
    <li><code>devices</code> is table of the <strong>set</strong> type intended for storing device's UID</li>
    <li>
        <code>device:xxx</code> where <em>xxx</em> is device name from <em>devices</em> table is table of the
        <strong>hash</strong> type intended for storing additional device
        information (specifically <em>ip</em>, <em>port</em>, <em>active</em> - status info, <em>msg_count</em> -
        only for this device, and <em>last_ping</em> - epoch time)
    </li>
    <li>
        <code>xxx:data</code> is table of the <strong>list</strong> type intended for storing device data history -
        at this moment this tables keeps last 1000 values from devices
    </li>
    <li>
        <code>connection:xxx</code> is table of the <strong>set</strong> as like as <em>devices</em> table - this
        table is intended for storing device connections to another devices - this is how devices know where to send
        data
    </li>
</ul>
<p>
    There are also keys for storing additional information. At this moment there is <code>msg_count</code> which is
    for storing integer value of all requests sent through this server. This number should be much bigger than
    <code>msg_count</code> in the <code>device:xxx</code> table.
</p>

<h2>Signals</h2>
<p>
    There are two ways how to send data from concentrator to the server and vice versa. You can do this via TCP
    packets or UDP datagrams. By default server is listening on port <code>50000</code> (for both protocols).
    Data should be in <strong>RESP</strong> (REdis Serialization Protocol) protocol. TCP is intended for important
    data like one-time signal (signal switch) or ping. It's because of you're using UDP, you cannot be sure that UDP
    datagram will reach the destination (server). It's fact - UDP is "fire and forget" protocol.
</p>
<pre>
TCP:    *2\r\n$4\r\nPING\r\n$11\r\nTEMP_000001\r\n
UDP:    *2\r\n$11\r\nTEMP_000001\r\n$4\r\n0512d\r\n
</pre>
